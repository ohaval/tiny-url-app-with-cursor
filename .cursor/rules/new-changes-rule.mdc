---
description:
globs:
alwaysApply: true
---
# Make command and Makefile

- Always prefer to use make commands when running terminal commands, or when implementing bash scripts / CI-CD scripts. The idea is that the Makefile will be a source of high-quality set of actions we might want to do.

# Code formats

- Always prefer to use absolute imports instead of relative ones.
- Try to not exceed line length of 80, but in special cases if needed you can use a # noqa: E501 on the end of the line if needed.

# Git Add and Commit

This rule file is relevant for most of the requests I will ask you to perform some task, like add a feature, fix tests, improve readability, etc..
The instruction is to always run `make lint` and `make lt` to make sure no linting or test errors, and then `git add` the chagnes you did, and `git commit` them at the end. No need to write commit descriptions, only the title. Avoid longre commit messages (==title), and opt for ones shorter than 80 characters.

# Documentation

After making some changes, always look at the docs around it and see if they need an update or not. Also very important to keep the `Makefile` file and the `README.md` always up to date, also check on them often and especially after changes.

## Feature And Steps Tracking

In features documentation files, or learning-steps always track what we have done and what's not. Using the âœ… emoji is a great way to sign on specific items that were done.

# Stack

- **Backend**: Python 3.11
- **Infrastructure**: AWS CDK (Infrastructure as Code)
- **Cloud Provider**: AWS
- **Database**: DynamoDB
- **API**: AWS API Gateway + Lambda
- **Testing**: pytest
- **CI/CD**: GitHub Actions
